const Note = require("../models/Note");
const path = require("path");
const fs = require("fs");

// Import the upload configuration that handles different storage for files and thumbnails
const handleUpload = require("../config/uploadConfig");

// Ensure thumbnail directory exists
const ensureThumbnailDir = () => {
  const thumbnailDir = path.join(__dirname, "../uploads/thumbnails");
  if (!fs.existsSync(thumbnailDir)) {
    fs.mkdirSync(thumbnailDir, { recursive: true });
  }
};

// Get all notes (optionally by category)
const getNotes = async (req, res) => {
  try {
    const { category } = req.query;
    let query = {};
    if (category && category !== "All") query.category = category;

    const notes = await Note.find(query).populate("uploadedBy", "username");
    res.status(200).json(notes);
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
};

// Upload new note
const uploadNote = async (req, res) => {
  try {
    // Ensure thumbnail directory exists
    ensureThumbnailDir();

    if (!req.files?.file) {
      return res.status(400).json({ message: "No file uploaded" });
    }

    const file = req.files.file[0];
    const thumbnailFile = req.files.thumbnail?.[0];

    const noteData = {
      title: req.body.title,
      category: req.body.category,
      subject: req.body.subject || req.body.category,
      file: {
        data: file.buffer,
        contentType: file.mimetype,
        originalName: file.originalname,
        size: file.size,
      },
      uploadedBy: req.user.id,
      isGeneralNote: req.body.isGeneralNote === "true",
    };

    // Handle thumbnail - store path to local file
    if (thumbnailFile && thumbnailFile.filename) {
      // thumbnailFile.filename contains the unique filename generated by the middleware
      noteData.thumbnail = `/uploads/thumbnails/${thumbnailFile.filename}`;
      console.log("Thumbnail saved:", noteData.thumbnail);
    } else {
      // Set default thumbnail if none provided
      noteData.thumbnail = "/uploads/thumbnails/CNotes-Logo.png";
      console.log("Using default thumbnail:", noteData.thumbnail);
    }

    if (req.body.isGeneralNote !== "true") {
      if (req.body.course) noteData.course = req.body.course;
      if (req.body.semester) noteData.semester = req.body.semester;
    }

    const note = await Note.create(noteData);
    console.log("Note created successfully with ID:", note._id);
    res.status(201).json(note);
  } catch (error) {
    console.error("Upload error:", error);
    res
      .status(500)
      .json({ message: "Failed to upload note. Please try again." });
  }
};

// Download note file
const downloadNote = async (req, res) => {
  try {
    const note = await Note.findById(req.params.id);
    if (!note || !note.file?.data) {
      return res.status(404).json({ message: "Note or file not found" });
    }

    res.setHeader("Content-Type", note.file.contentType);
    res.setHeader(
      "Content-Disposition",
      `attachment; filename="${note.file.originalName}"`
    );

    res.send(note.file.data);
  } catch (error) {
    console.error("Download error:", error);
    res
      .status(500)
      .json({ message: "Failed to download note. Please try again." });
  }
};

module.exports = {
  upload: handleUpload,
  getNotes,
  uploadNote,
  downloadNote,
};
